// Generate random phone numbers for calling campaigns
export async function POST(request) {
  try {
    const body = await request.json();
    const { state, count = 10 } = body;

    // US state area codes mapping
    const stateAreaCodes = {
      'CA': ['213', '310', '323', '408', '415', '510', '562', '619', '626', '650', '661', '714', '747', '760', '805', '818', '831', '858', '909', '916', '925', '949', '951'],
      'TX': ['214', '281', '409', '430', '432', '469', '512', '713', '737', '806', '817', '832', '903', '915', '936', '940', '956', '972', '979'],
      'NY': ['212', '315', '347', '516', '518', '585', '607', '631', '646', '716', '718', '845', '914', '917', '929'],
      'FL': ['239', '305', '321', '352', '386', '407', '561', '689', '727', '754', '772', '786', '813', '850', '863', '904', '941', '954'],
      'IL': ['217', '224', '309', '312', '331', '618', '630', '708', '773', '779', '815', '847', '872'],
      'PA': ['215', '267', '272', '412', '484', '570', '610', '717', '724', '814', '878'],
      'OH': ['216', '220', '234', '330', '380', '419', '440', '513', '567', '614', '740', '937'],
      'GA': ['229', '404', '470', '478', '678', '706', '762', '770', '912'],
      'NC': ['252', '336', '704', '743', '828', '910', '919', '980', '984'],
      'MI': ['231', '248', '269', '313', '517', '586', '616', '734', '810', '906', '947', '989']
    };

    // National area codes (common ones)
    const nationalAreaCodes = [
      '201', '202', '203', '205', '206', '207', '208', '209', '210', '212', '213', '214', '215', '216', '217', '218', '219', '220',
      '224', '225', '228', '229', '231', '234', '239', '240', '248', '251', '252', '253', '254', '256', '260', '262', '267', '269',
      '270', '272', '276', '281', '301', '302', '303', '304', '305', '307', '308', '309', '310', '312', '313', '314', '315', '316',
      '317', '318', '319', '320', '321', '323', '325', '330', '331', '334', '336', '337', '339', '347', '351', '352', '360', '361',
      '386', '401', '402', '404', '405', '406', '407', '408', '409', '410', '412', '413', '414', '415', '417', '419', '423', '424',
      '425', '430', '432', '434', '435', '440', '442', '443', '458', '469', '470', '475', '478', '479', '480', '484', '501', '502',
      '503', '504', '505', '507', '508', '509', '510', '512', '513', '515', '516', '517', '518', '520', '530', '540', '541', '551',
      '559', '561', '562', '563', '567', '570', '571', '573', '574', '575', '580', '585', '586', '601', '602', '603', '605', '606',
      '607', '608', '609', '610', '612', '614', '615', '616', '617', '618', '619', '620', '623', '626', '628', '629', '630', '631',
      '636', '641', '646', '650', '651', '657', '660', '661', '662', '667', '669', '678', '681', '682', '689', '701', '702', '703',
      '704', '706', '707', '708', '712', '713', '714', '715', '716', '717', '718', '719', '720', '724', '725', '727', '731', '732',
      '734', '737', '740', '743', '747', '754', '757', '760', '762', '763', '765', '770', '772', '773', '774', '775', '779', '781',
      '785', '786', '801', '802', '803', '804', '805', '806', '808', '810', '812', '813', '814', '815', '816', '817', '818', '828',
      '830', '831', '832', '843', '845', '847', '848', '850', '856', '857', '858', '859', '860', '862', '863', '864', '865', '870',
      '872', '878', '901', '903', '904', '906', '907', '908', '909', '910', '912', '913', '914', '915', '916', '917', '918', '919',
      '920', '925', '928', '929', '931', '936', '937', '940', '941', '947', '949', '951', '952', '954', '956', '970', '971', '972',
      '973', '978', '979', '980', '984', '985', '989'
    ];

    // Choose area codes based on state or national
    let areaCodes;
    if (state && stateAreaCodes[state.toUpperCase()]) {
      areaCodes = stateAreaCodes[state.toUpperCase()];
    } else {
      areaCodes = nationalAreaCodes;
    }

    // Generate random phone numbers
    const phoneNumbers = [];
    for (let i = 0; i < Math.min(count, 100); i++) { // Limit to 100 numbers max
      const areaCode = areaCodes[Math.floor(Math.random() * areaCodes.length)];

      // Generate exchange (first 3 digits after area code) - avoid 0 or 1 as first digit
      const exchange = (Math.floor(Math.random() * 800) + 200).toString().padStart(3, '0');

      // Generate last 4 digits
      const lastFour = Math.floor(Math.random() * 10000).toString().padStart(4, '0');

      const phoneNumber = `(${areaCode}) ${exchange}-${lastFour}`;
      phoneNumbers.push(phoneNumber);
    }

    return Response.json({ 
      phoneNumbers,
      state: state || 'National',
      count: phoneNumbers.length
    });
  } catch (error) {
    console.error('Error generating phone numbers:', error);
    return Response.json({ error: 'Failed to generate phone numbers' }, { status: 500 });
  }
}